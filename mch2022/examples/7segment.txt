
\ 7-Segment display on PMOD connector

\ -----------------------------------------------------------------------------

$0010 constant pmod-in
$0020 constant pmod-out
$0040 constant pmod-dir

\ -----------------------------------------------------------------------------

binary

create font
0111111 $7F xor , \ 0
0000110 $7F xor , \ 1
1011011 $7F xor , \ 2
1001111 $7F xor , \ 3
1100110 $7F xor , \ 4
1101101 $7F xor , \ 5
1111101 $7F xor , \ 6
0000111 $7F xor , \ 7
1111111 $7F xor , \ 8
1101111 $7F xor , \ 9
1110111 $7F xor , \ A
1111100 $7F xor , \ B
0111001 $7F xor , \ C
1011110 $7F xor , \ D
1111001 $7F xor , \ E
1110001 $7F xor , \ F

decimal

: >seg  ( u -- x ) 2* font + @ ;

: ascii ( -- )

  0
  begin
    dup          $F and >seg $80 or pmod-out io!
    500 us
    dup 4 rshift $F and >seg        pmod-out io!
    500 us

    key? if drop key then
    dup 27 =
  until
  drop

  $7F pmod-out io!
;

ascii
